{"version":3,"sources":["services/phonebookservice.js","App.js","index.js"],"names":["BASE_URL","phonebookService","getAll","axios","get","then","res","data","create","name","number","post","remove","id","delete","update","put","Filter","filter","setFilter","value","onChange","e","target","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","type","Persons","persons","onDelete","map","person","style","display","gap","onClick","Notification","notify","status","message","className","App","useState","setPersons","notification","setNotification","handleNotification","setTimeout","useEffect","catch","err","personsToShow","toLowerCase","includes","find","window","confirm","psn","response","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a4d4bc.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst BASE_URL = `api/persons`\r\n\r\nconst getAll = () => {\r\n    const response = axios.get(BASE_URL)\r\n    return response.then(res => res.data)\r\n}\r\n\r\nconst create = (name, number) => {\r\n    const response = axios.post(BASE_URL, { name, number })\r\n    return response.then(res => res.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const response = axios.delete(`${BASE_URL}/${id}`)\r\n    return response.then(res => res)\r\n}\r\n\r\nconst update = (id, number, name) => {\r\n    const response = axios.put(`${BASE_URL}/${id}`, { number, name })\r\n    return response.then(res => res.data)\r\n\r\n}\r\n\r\nconst phonebookService = { getAll, create, remove, update }\r\n\r\nexport default phonebookService","import React, { useState, useEffect } from \"react\"\nimport phonebookService from \"./services/phonebookservice\"\n\nconst Filter = ({ filter, setFilter }) => {\n  return (\n    <div>\n      filter shown with: <input value={ filter } onChange={ (e) => setFilter(e.target.value) } />\n    </div>\n  )\n}\n\nconst PersonForm = ({ addPerson, newName, setNewName, newNumber, setNewNumber }) => {\n  return (\n    <form\n      onSubmit={ (e) => {\n        e.preventDefault()\n        addPerson({ name: newName, number: newNumber })\n        setNewName(\"\")\n        setNewNumber(\"\")\n      } }\n    >\n      <div>\n        name: <input value={ newName } onChange={ (e) => setNewName(e.target.value) } />\n      </div>\n      <div>\n        number: <input value={ newNumber } onChange={ (e) => setNewNumber(e.target.value) } />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ persons, onDelete }) => {\n  return (\n    <div>\n      { persons.map(person => (\n        <div key={ person.id } style={ { display: 'flex', gap: '10px' } }>\n          <p >{ person.name } { person.number }</p>\n          <button onClick={ () => onDelete(person.name, person.id) }>delete</button>\n        </div>\n      )) }\n    </div>\n  )\n}\nconst Notification = ({ notify }) => {\n\n  if (notify === null) {\n    return null\n  }\n  const { status, message } = notify\n\n  return (\n    <div className={ 'message ' + status }>\n      { message }\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: \"Arto Hellas\", number: \"040-123456\", id: 1 },\n  ])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filter, setFilter] = useState(\"\")\n  const [notification, setNotification] = useState(null)\n\n\n\n  useEffect(() => {\n    phonebookService.getAll().then(persons => setPersons(persons)).catch(err => {\n      handleNotification('error', \"An error occurred while getting persons\")\n    })\n\n  }, [])\n\n  function handleNotification (status, message) {\n    setNotification({ status, message })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n\n  const addPerson = ({ name, number }) => {\n    const person = persons.find((person) => person.name.toLowerCase() === name.toLowerCase())\n    if (person) {\n      if (person.number === number) {\n        handleNotification('error', `${name} with ${number} is already added to phonebook`)\n        return\n      }\n      const id = person.id\n      const confirm = window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)\n      if (confirm) {\n        phonebookService.update(id, number, name).then(person => {\n          setPersons(persons.map(psn => psn.id !== person.id ? psn : person))\n          handleNotification('success', `${name} number updated to ${number}`)\n        }).catch(err => handleNotification('error', err.response.data.error))\n      }\n      return\n    }\n    phonebookService.create(name, number).then(person => {\n      setPersons(persons.concat(person))\n      handleNotification('success', `Added ${name}`)\n    }).catch(err => handleNotification('error', err.response.data.error))\n\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const handleDelete = (name, id) => {\n    const result = window.confirm(`Delete ${name}?`)\n    if (result) {\n      phonebookService.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        handleNotification('success', `${name} deleted`)\n      }).catch(err => handleNotification('error', `${name} not in server refresh your page`))\n    }\n    return\n  }\n\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notify={ notification } />\n\n      <Filter filter={ filter } setFilter={ setFilter } />\n\n      <h3>add a new</h3>\n      <PersonForm\n        addPerson={ addPerson }\n        newName={ newName }\n        setNewName={ setNewName }\n        newNumber={ newNumber }\n        setNewNumber={ setNewNumber }\n      />\n      <h2>Numbers</h2>\n      <Persons persons={ personsToShow } onDelete={ handleDelete } />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// npx json-server --port 3001 --watch db.json\n"],"sourceRoot":""}